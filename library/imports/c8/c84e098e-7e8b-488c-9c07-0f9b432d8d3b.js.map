{"version":3,"sources":["../../../../../assets/Scripts/Components/assets/Scripts/Components/Timer.ts"],"names":[],"mappings":";;;;;AACA,yCAAoC;AACpC,6DAAwD;AACxD,yCAAoC;AACpC,yCAAoC;AACpC,6CAAwC;AAElC,IAAA,kBAAqC,EAAnC,oBAAO,EAAE,sBAAQ,CAAmB;AAG5C;IAAmC,yBAAY;IAD/C;QAAA,qEAuCC;QArCA,WAAK,GAAa,IAAI,CAAC;QAEvB,UAAI,GAAW,CAAC,CAAC;QACjB,WAAK,GAAQ,IAAI,CAAC;;IAkCnB,CAAC;IAhCA,sBAAM,GAAN;QACC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;QAC9C,OAAO,CAAC,EAAE,CAAC,gBAAM,CAAC,UAAU,EAAE,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;IACvD,CAAC;IAED,yBAAS,GAAT;QACC,OAAO,CAAC,GAAG,CAAC,gBAAM,CAAC,UAAU,EAAE,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;IACxD,CAAC;IAED,2BAAW,GAAX,UAAY,EAAQ;QAApB,iBAsBC;YAtBa,cAAI;QACjB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,IAAI,CAAC,KAAK,EAAE;YACf,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SAC1B;QACD,IAAI,CAAC,KAAK,GAAG,WAAW,CAAC;YACxB,KAAI,CAAC,IAAI,EAAE,CAAC;YACZ,IAAI,KAAI,CAAC,IAAI,GAAG,CAAC,EAAE;gBAClB,KAAI,CAAC,IAAI,GAAG,CAAC,CAAC;gBACd,aAAa,CAAC,KAAI,CAAC,KAAK,CAAC,CAAC;gBAC1B,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC;gBAClB,IAAG,CAAC,wBAAc,CAAC,CAAC,CAAC,MAAM,EAAC;oBAC3B,IAAI,MAAM,GAAG,EAAC,WAAW,EAAE,KAAK,EAAE,KAAK,EAAE,EAAE,EAAC,CAAC;oBAC7C,MAAM,CAAC,KAAK,CAAC,gBAAM,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC;oBAChC,MAAM,CAAC,KAAK,CAAC,gBAAM,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC;oBACpC,MAAM,CAAC,KAAK,CAAC,gBAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,GAAG,mBAAS,CAAC,EAAE,CAAC,KAAK,CAAC;oBACtD,MAAM,CAAC,KAAK,CAAC,gBAAM,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC;oBACzC,OAAO,CAAC,IAAI,CAAC,gBAAM,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;iBACpC;aACD;YACD,KAAI,CAAC,KAAK,CAAC,MAAM,GAAG,KAAI,CAAC,IAAI,GAAG,EAAE,CAAC;QACpC,CAAC,EAAE,IAAI,CAAC,CAAC;IACV,CAAC;IArCmB,KAAK;QADzB,OAAO;OACa,KAAK,CAsCzB;IAAD,YAAC;CAtCD,AAsCC,CAtCkC,EAAE,CAAC,SAAS,GAsC9C;kBAtCoB,KAAK","file":"","sourceRoot":"../../../../../assets/Scripts/Components","sourcesContent":["\nimport Events from '../Misc/Events';\nimport HexagonManager from '../Managers/HexagonManager';\nimport Signal from '../Misc/Signal';\nimport PlayerTag from './PlayerTag';\nimport Server from '../Managers/Server';\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class Timer extends cc.Component {\n\tlabel: cc.Label = null;\n\n\ttime: number = 0;\n\ttimer: any = null;\n\n\tonLoad() {\n\t\tthis.label = this.node.getComponent(cc.Label);\n\t\twhevent.on(Events.GAME_START, this.onGameStart, this);\n\t}\n\n\tonDestroy() {\n\t\twhevent.off(Events.GAME_START, this.onGameStart, this);\n\t}\n\n\tonGameStart({ time }) {\n\t\tthis.time = time;\n\t\tif (this.timer) {\n\t\t\tclearInterval(this.timer);\n\t\t}\n\t\tthis.timer = setInterval(() => {\n\t\t\tthis.time--;\n\t\t\tif (this.time < 0) {\n\t\t\t\tthis.time = 0;\n\t\t\t\tclearInterval(this.timer);\n\t\t\t\tthis.timer = null;\n\t\t\t\tif(!HexagonManager.$.online){\n\t\t\t\t\tlet result = {interrupted: false, score: {}};\n\t\t\t\t\tresult.score[Server.$.pid] = {};\n\t\t\t\t\tresult.score[Server.$.pid + 1] = {};\n\t\t\t\t\tresult.score[Server.$.pid].score = PlayerTag.me.score;\n\t\t\t\t\tresult.score[Server.$.pid + 1].score = 0;\n\t\t\t\t\twhevent.emit(Signal.RESULT, result);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.label.string = this.time + '';\n\t\t}, 1000);\n\t}\n}\n"]}