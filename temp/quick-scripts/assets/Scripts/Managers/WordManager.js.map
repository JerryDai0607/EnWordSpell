{"version":3,"sources":["WordManager.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"../../../../../assets/Scripts/Managers","sourcesContent":["\r\nimport Events from '../Misc/Events';\r\nimport Config from './Config';\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class WordManager extends cc.Component {\r\n\tstatic $: WordManager = null;\r\n\r\n\twords: string[] = [];\r\n\tloaded: boolean = false;\r\n\r\n\tlettersChart: string = null;\r\n\r\n\tlettersChartVowel: string = null;\r\n\tlettersChartConsonant: string = null;\r\n\r\n\tsolvedWords: string[] = [];\r\n\r\n\tonLoad() {\r\n\t\tWordManager.$ = this;\r\n\t\tcc.log('Loading word list');\r\n\r\n\t\twhevent.emit(Events.LOAD_RESOURCE, { name: 'words' });\r\n\t\tcc.loader.loadRes('words.json', (err, json: cc.JsonAsset) => {\r\n\t\t\tthis.words = json.json;\r\n\t\t\twhevent.emit(Events.LOADED_RESOURCE, { name: 'words', data: json.json });\r\n\t\t\tthis.loaded = true;\r\n\t\t\tcc.log(`Loaded ${this.words.length} words.`);\r\n\t\t});\r\n\t}\r\n\r\n\tonDestroy() {}\r\n\r\n\tisWord(word: string) {\r\n\t\treturn this.words.indexOf(word) >= 0;\r\n\t}\r\n\r\n\tgenerateRandomLetters(length: number = 1) {\r\n\t\tlet letters = '';\r\n\r\n\t\tif (!this.lettersChart) {\r\n\t\t\tthis.lettersChart = '';\r\n\t\t\tfor (let letter in Config.frequency) {\r\n\t\t\t\tfor (let i = 0; i < Config.frequency[letter]; i++) {\r\n\t\t\t\t\tthis.lettersChart += letter;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (let i = 0; i < length; i++) {\r\n\t\t\tletters += this.lettersChart[Math.floor(this.lettersChart.length * Math.random())];\r\n\t\t}\r\n\t\treturn letters;\r\n\t}\r\n\r\n\tgenerateRandomLetters2(ids: number[]) {\r\n\t\tlet letters = '';\r\n\r\n\t\tif (!this.lettersChartVowel) {\r\n\t\t\tthis.lettersChartVowel = '';\r\n\t\t\tfor (let letter in Config.frequency) {\r\n\t\t\t\tfor (let i = 0; i < Config.frequency[letter]; i++) {\r\n\t\t\t\t\tif ('AEIOU'.indexOf(letter) >= 0) this.lettersChartVowel += letter;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!this.lettersChartConsonant) {\r\n\t\t\tthis.lettersChartConsonant = '';\r\n\t\t\tfor (let letter in Config.frequency) {\r\n\t\t\t\tfor (let i = 0; i < Config.frequency[letter]; i++) {\r\n\t\t\t\t\tif ('AEIOU'.indexOf(letter) < 0) this.lettersChartConsonant += letter;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet consonants = [0, 1, 2, 3, 4, 11, 12, 13, 14, 15, 16, 17, 26, 27, 28, 29, 30, 31, 32, 33, 34, 43, 44, 45, 46, 47, 48, 49, 56, 57, 58, 59, 60];\r\n\r\n\t\tfor (let id of ids) {\r\n\t\t\tlet dict =\r\n\t\t\t\tMath.random() < 0.9\r\n\t\t\t\t\t? consonants.indexOf(id) >= 0\r\n\t\t\t\t\t\t? this.lettersChartConsonant\r\n\t\t\t\t\t\t: this.lettersChartVowel\r\n\t\t\t\t\t: consonants.indexOf(id) >= 0\r\n\t\t\t\t\t? this.lettersChartVowel\r\n\t\t\t\t\t: this.lettersChartConsonant;\r\n\t\t\tletters += dict[Math.floor(dict.length * Math.random())];\r\n\t\t}\r\n\t\treturn letters;\r\n\t}\r\n}\r\n"]}